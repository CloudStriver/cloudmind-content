// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/CloudStriver/cloudmind-content/biz/adaptor"
	"github.com/CloudStriver/cloudmind-content/biz/application/service"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/config"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/mapper/file"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/mapper/label"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/mapper/post"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/mapper/sharefile"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/mapper/user"
	"github.com/CloudStriver/cloudmind-content/biz/infrastructure/stores/redis"
)

// Injectors from wire.go:

func NewContentServerImpl() (*adaptor.ContentServerImpl, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	iMongoMapper := file.NewMongoMapper(configConfig)
	sharefileIMongoMapper := sharefile.NewMongoMapper(configConfig)
	fileService := &service.FileService{
		FileMongoMapper:      iMongoMapper,
		ShareFileMongoMapper: sharefileIMongoMapper,
	}
	postIMongoMapper := post.NewMongoMapper(configConfig)
	iEsMapper := post.NewEsMapper(configConfig)
	redisRedis := redis.NewRedis(configConfig)
	postService := &service.PostService{
		Config:          configConfig,
		PostMongoMapper: postIMongoMapper,
		PostEsMapper:    iEsMapper,
		Redis:           redisRedis,
	}
	labelIMongoMapper := label.NewMongoMapper(configConfig)
	labelService := &service.LabelService{
		LabelMongoMapper: labelIMongoMapper,
	}
	userMongoMapper := user.NewMongoMapper(configConfig)
	userEsMapper := user.NewEsMapper(configConfig)
	userServiceImpl := &service.UserServiceImpl{
		Config:          configConfig,
		UserMongoMapper: userMongoMapper,
		UserEsMapper:    userEsMapper,
		Redis:           redisRedis,
	}
	contentServerImpl := &adaptor.ContentServerImpl{
		Config:       configConfig,
		FileService:  fileService,
		PostService:  postService,
		LabelService: labelService,
		UserService:  userServiceImpl,
	}
	return contentServerImpl, nil
}
